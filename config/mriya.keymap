/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    macros {
        mac: mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 3 &to 3>;
            label = "MAC";
        };

        win: win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 4 &to 0>;
            label = "WIN";
        };

        m_dash: m_dash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_5 &kp KP_NUMBER_1>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "M_DASH";
            wait-ms = <2>;
            tap-ms = <5>;
        };

        win_lang_1: win_lang_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp N1>,
                <&macro_release>,
                <&kp LEFT_ALT &kp LEFT_SHIFT>;

            label = "WIN_LANG_1";
        };

        win_lang_2: win_lang_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp N2>,
                <&macro_release>,
                <&kp LEFT_ALT &kp LEFT_SHIFT>;

            label = "WIN_LANG_2";
        };
    };

    behaviors {
        lang_win: lang_win {
            compatible = "zmk,behavior-mod-morph";
            label = "LANG_WIN";
            bindings = <&win_lang_2>, <&win_lang_1>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LALT|MOD_LCTL)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_win_lang1 {
            bindings = <&win_lang_1>;
            key-positions = <52 12>;
            timeout-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        win_base {
            bindings = <
             &kp ESC       &kp N1  &kp N2     &kp N3     &kp N4                &kp N5       &kp N6     &kp N7          &kp N8     &kp N9     &kp N0    &kp MINUS
&win_lang_2  &kp GRAVE     &kp Q   &kp W      &kp E      &kp R                 &kp T        &kp Y      &kp U           &kp I      &kp O      &kp P     &kp LBKT       &kp RBKT
             &kp LALT      &kp A   &kp S      &kp D      &kp F                 &kp G        &kp H      &kp J           &kp K      &kp L      &kp SEMI  &mt RALT SQT
             &kp LEFT_WIN  &kp Z   &kp X      &kp C      &kp V                 &kp B        &kp N      &kp M           &kp COMMA  &kp DOT    &kp FSLH  &kp KP_DIVIDE
                                   &kp LCTRL  &lt 2 TAB  &mt LEFT_SHIFT SPACE  &lt 1 RET    &lt 1 ESC  &mt RSHFT BSPC  &lt 2 DEL  &kp RCTRL
            >;
        };

        win_lower {
            bindings = <
        &m_dash        &trans  &kp RA(NUMBER_2)  &kp RA(NUMBER_3)  &kp RA(LS(M))  &kp RA(LS(X))    &kp RA(LS(LESS_THAN))  &kp RA(LS(GREATER_THAN))  &kp RA(N8)        &kp RA(COMMA)          &kp RA(DOT)  &kp RA(MINUS)
&trans  &kp RA(GRAVE)  &trans  &kp RA(W)         &trans            &trans         &kp LC(LS(T))    &kp BACKSLASH          &kp RA(LEFT_BRACKET)      &kp RA(NUMBER_6)  &kp RA(RIGHT_BRACKET)  &trans       &trans         &kp F12
        &kp LALT       &trans  &kp LC(LS(Z))     &kp LC(Z)         &kp EQUAL      &kp PLUS         &kp PIPE               &kp RA(N9)                &kp RA(V)         &kp RA(N0)             &trans       &kp RALT
        &kp LWIN       &kp F1  &kp F2            &kp F3            &kp F4         &kp F5           &kp F6                 &kp F7                    &kp F8            &kp F9                 &kp F10      &kp F11
                               &trans            &lt 6 TAB         &trans         &trans           &trans                 &trans                    &lt 6 DEL         &trans
            >;
        };

        win_raise {
            bindings = <
        &trans    &none         &kp LC(LEFT_BRACKET)  &kp LS(UP_ARROW)  &kp LC(RIGHT_BRACKET)  &kp LA(LS(V))    &none         &none        &kp LS(LC(NUMBER_1))  &none      &none            &none
&trans  &trans    &none         &kp LEFT_BRACKET      &kp UP_ARROW      &kp RIGHT_BRACKET      &kp LA(LS(H))    &kp C_VOL_UP  &kp HOME     &kp UP                &kp END    &kp SLCK         &kp CAPS         &kp C_SLEEP
        &kp LALT  &kp LS(LEFT)  &kp LEFT              &kp DOWN          &kp RIGHT              &kp LS(RIGHT)    &kp C_MUTE    &kp LEFT     &kp DOWN              &kp RIGHT  &kp K_APP        &mt RALT INSERT
        &trans    &none         &none                 &kp LS(DOWN)      &kp LS(N0)             &none            &kp C_VOL_DN  &kp PAGE_UP  &none                 &kp PG_DN  &kp PAUSE_BREAK  &trans
                                &trans                &trans            &trans                 &lt 6 RET        &lt 6 ESC     &trans       &trans                &trans
            >;
        };

        mac_base {
            bindings = <
          &kp ESC    &kp N1  &kp N2        &kp N3     &kp N4                &kp N5       &kp N6     &kp N7          &kp N8     &kp N9         &kp N0    &kp MINUS
&kp CAPS  &kp GRAVE  &kp Q   &kp W         &kp E      &kp R                 &kp T        &kp Y      &kp U           &kp I      &kp O          &kp P     &kp LBKT       &kp RBKT
          &kp LALT   &kp A   &kp S         &kp D      &kp F                 &kp G        &kp H      &kp J           &kp K      &kp L          &kp SEMI  &mt RALT SQT
          &kp LCTRL  &kp Z   &kp X         &kp C      &kp V                 &kp B        &kp N      &kp M           &kp COMMA  &kp DOT        &kp FSLH  &kp KP_DIVIDE
                             &kp LEFT_WIN  &lt 5 TAB  &mt LEFT_SHIFT SPACE  &lt 4 RET    &lt 4 ESC  &mt RSHFT BSPC  &lt 5 DEL  &kp RIGHT_WIN
            >;
        };

        mac_lower {
            bindings = <
        &m_dash        &trans  &kp RA(NUMBER_2)  &kp RA(NUMBER_3)  &trans     &kp RA(H)        &kp RA(LS(LESS_THAN))  &kp RA(LS(GREATER_THAN))  &kp RA(LS(H))     &kp RA(PLUS)   &kp RA(EQUAL)  &kp RA(LS(MINUS))
&trans  &kp RA(GRAVE)  &trans  &kp RA(W)         &trans            &trans     &kp LS(LG(T))    &kp BACKSLASH          &kp RA(GRAVE)             &kp RA(NUMBER_6)  &kp RA(TILDE)  &trans         &trans             &kp F12
        &kp LALT       &trans  &kp LS(LG(Z))     &kp LG(Z)         &kp EQUAL  &kp PLUS         &kp RA(LS(BACKSLASH))  &kp RA(N9)                &kp RA(V)         &kp RA(N0)     &trans         &kp RALT
        &kp LCTRL      &kp F1  &kp F2            &kp F3            &kp F4     &kp F5           &kp F6                 &kp F7                    &kp F8            &kp F9         &kp F10        &kp F11
                               &trans            &lt 6 TAB         &trans     &trans           &trans                 &trans                    &lt 6 DEL         &trans
            >;
        };

        mac_raise {
            bindings = <
        &trans    &none         &kp LG(LEFT_BRACKET)  &kp LS(UP_ARROW)  &kp LG(RIGHT_BRACKET)  &kp LA(LS(V))    &none         &none        &kp LS(LG(NUMBER_1))  &none      &none            &none
&trans  &trans    &none         &kp LEFT_BRACKET      &kp UP_ARROW      &kp RIGHT_BRACKET      &kp LA(LS(H))    &kp C_VOL_UP  &kp HOME     &kp UP                &kp END    &kp SLCK         &kp CAPS         &kp C_SLEEP
        &kp LALT  &kp LS(LEFT)  &kp LEFT              &kp DOWN          &kp RIGHT              &kp LS(RIGHT)    &kp C_MUTE    &kp LEFT     &kp DOWN              &kp RIGHT  &kp K_APP        &mt RALT INSERT
        &trans    &none         &none                 &kp LS(DOWN)      &kp LS(N0)             &none            &kp C_VOL_DN  &kp PAGE_UP  &none                 &kp PG_DN  &kp PAUSE_BREAK  &trans
                                &trans                &trans            &trans                 &lt 6 RET        &lt 6 ESC     &trans       &trans                &trans
            >;
        };

        switch {
            bindings = <
       &none        &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
&none  &bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader  &none
       &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
       &sys_reset   &none         &none         &none         &mac          &win            &win          &mac          &none         &none         &none         &sys_reset
                                  &none         &trans        &none         &trans          &trans        &none         &trans        &none
            >;
        };
    };
};
