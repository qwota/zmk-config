/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
          &kp ESC       &kp N1  &kp N2     &kp N3     &kp N4           &kp N5       &kp N6     &kp N7          &kp N8     &kp N9     &kp N0    &kp MINUS
&kp CAPS  &kp GRAVE     &kp Q   &kp W      &kp E      &kp R            &kp T        &kp Y      &kp U           &kp I      &kp O      &kp P     &kp LBKT      &kp RBKT
          &kp LALT      &kp A   &kp S      &kp D      &kp F            &kp G        &kp H      &kp J           &kp K      &kp L      &kp SEMI  &mt RALT SQT
          &kp LEFT_WIN  &kp Z   &kp X      &kp C      &kp V            &kp B        &kp N      &kp M           &kp COMMA  &kp DOT    &kp FSLH  &kp BSLH
                                &kp LCTRL  &lt 2 TAB  &mt LSHFT SPACE  &lt 1 RET    &lt 1 ESC  &mt RSHFT BSPC  &lt 2 DEL  &kp RCTRL
            >;
        };

        lower_layer {
            bindings = <
        &trans         &trans  &kp RA(NUMBER_2)  &kp RA(NUMBER_3)  &trans     &trans      &trans  &trans                &kp RA(N8)        &kp RA(COMMA)          &kp RA(DOT)  &kp RA(MINUS)
&trans  &kp RA(GRAVE)  &trans  &trans            &trans            &trans     &trans      &trans  &kp RA(LEFT_BRACKET)  &kp RA(NUMBER_6)  &kp RA(RIGHT_BRACKET)  &trans       &trans         &kp F12
        &kp LALT       &trans  &kp LC(LS(Z))     &kp LC(Z)         &kp EQUAL  &kp PLUS    &trans  &kp RA(N9)            &kp RA(V)         &kp RA(N0)             &trans       &kp RALT
        &kp LWIN       &kp F1  &kp F2            &kp F3            &kp F4     &kp F5      &kp F6  &kp F7                &kp F8            &kp F9                 &kp F10      &kp F11
                               &trans            &lt 3 TAB         &trans     &trans      &trans  &trans                &lt 3 DEL         &trans
            >;
        };

        raise_layer {
            bindings = <
        &trans    &trans        &kp LC(LEFT_BRACKET)  &kp LS(UP_ARROW)  &kp LC(RIGHT_BRACKET)  &kp LA(LS(V))    &trans        &trans       &kp LS(LC(NUMBER_1))  &trans     &trans           &trans
&trans  &trans    &trans        &kp LEFT_BRACKET      &kp UP_ARROW      &kp RIGHT_BRACKET      &kp LA(LS(H))    &kp C_VOL_UP  &kp HOME     &kp UP                &kp END    &kp SLCK         &kp CAPS         &trans
        &kp LALT  &kp LS(LEFT)  &kp LEFT              &kp DOWN          &kp RIGHT              &kp LS(RIGHT)    &kp C_MUTE    &kp LEFT     &kp DOWN              &kp RIGHT  &kp K_APP        &mt RALT INSERT
        &trans    &trans        &trans                &kp LS(DOWN)      &trans                 &trans           &kp C_VOL_DN  &kp PAGE_UP  &trans                &kp PG_DN  &kp PAUSE_BREAK  &trans
                                &trans                &trans            &trans                 &lt 3 RET        &lt 3 ESC     &trans       &trans                &trans
            >;
        };

        adjust_layer {
            bindings = <
       &none        &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
&none  &bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader  &none
       &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
       &sys_reset   &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &sys_reset
                                  &none         &trans        &none         &trans          &trans        &none         &trans        &none
            >;
        };
    };
};
